/*!
 * @brief	ゴーストオブジェクト。
 */

#pragma once


namespace tkEngine{
	/*!
	 * @brief	ゴーストオブジェクト
	 *@detail
	 * ゴーストオブジェクトは剛体がすり抜けるあたり判定のオブジェクトです。
	 * キャラクターのチェックポイント通過判定、クリア判定などの
	 * キャラクターがすり抜ける必要のあるあたり判定に使えます。
	 */
	class CPhysicsGhostObject{
	public:
		/*!
		 * @brief	コンストラクタ。
		 */
		CPhysicsGhostObject();
		/*!
		 * @brief	デストラクタ。
		 */
		~CPhysicsGhostObject	();
		/*!
		 * @brief	ボックス形状のゴーストオブジェクトを作成。
		 *@param[in]	pos			座標。
		 *@param[in]	rot			回転。
		 *@param[in]	size	サイズ。	
		 */
		void Create(CVector3 pos, CQuaternion rot, CVector3 size);
		/*!
		* @brief	ゴーストオブジェクトを解放。
		*@detail
		* 明示的なタイミングでゴーストオブジェクトを削除したい場合に呼び出してください。
		*/
		void Release();
		/*!
		* @brief	引数で渡されたゴーストオブジェクトが自分自身かどうか判定。
		*/
		bool IsSelf(const btCollisionObject& ghost) const
		{
			return &ghost == &m_ghostObject;
		}
		
	private:
		bool						m_isRegistPhysicsWorld = false;	//!<物理ワールドに登録しているかどうかのフラグ。
		btGhostObject				m_ghostObject;	//!<ゴースト
		std::unique_ptr<ICollider>	m_collider;		//!<コライダー。
	};
}